# ## Задача 1. Как дела?
# Ваня что-то совсем заскучал на работе и решил побаловаться с кодом проекта.
# Он написал надоедливый декоратор,
# который при вызове декорируемой функции спрашивает у пользователя “Как дела?” и вне зависимости от его ответа,
# “держит в курсе” и отвечает что-то вроде “А у меня не очень!”
# и только потом запускает саму функцию.
# Правда, после такой выходки его чуть не уволили с работы.
#
# Реализуйте такой же декоратор и проверьте его работу на нескольких функциях.
#
# #### Пример кода:
# ````python
# @how_are_you
# def test():
#     print('<Тут что-то происходит...>')
#
#
# test()
# ````
#
# #### Результат:
# ````
# Как дела? Хорошо
# А у меня не очень! Ладно, держи свою функцию.
# <Тут что-то происходит...>

import functools
from typing import Callable, Any


def how_are_you(func: Callable) -> Callable:
    """
    Декоратор. Спрашивает как дела.
    Потом отвечает и возвращает функцию.
    """

    @functools.wraps(func)
    def wrapped_func(*args, **kwargs) -> int:
        _ = input('Как дела? ')
        print('А у меня не очень! Ладно, держи свою функцию.')
        result = func(*args, **kwargs)
        return result
    return wrapped_func


@how_are_you
def squares_sum() -> int:
    """ Возвращает сумму квадратов всех чисел от единицы до миллиона включительно. """
    total = 0
    for x in range(1, 1 * 10 ** 6 + 1):
        total += x ** 2
    return total


@how_are_you
def cubes_sum(number: int) -> int:
    """ Возвращает сумму кубов всех чисел от единицы до переданного числа включительно. """
    total = 0
    for x in range(1, number + 1):
        total += x ** 3
    return total


print(f'Сумма квадратов чисел от одного до миллиона: {squares_sum()}\n')
print(f'Сумма кубов чисел от одного до переданного числа: {cubes_sum(10)}\n')
