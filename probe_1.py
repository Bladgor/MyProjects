# ## Задача 4. Последовательность Хофштадтера
# Реализуйте генерацию последовательности Q Хофштадтера (итератором или генератором).
# Сама последовательность выглядит так:
#
# Q(n)=Q(n−Q(n−1))+Q(n−Q(n−2))
#
# В итератор (или генератор) передаётся список из двух чисел.
# Например, QHofstadter([1, 1]) генерирует точную последовательность Хофштадтера.
# Если передать значения [1, 2], то последовательность должна немедленно завершиться.

# Пример для понимания алгоритма:
# например надо подставлять значения Q(1) = 1, Q(2)=1 (по условию).
# Q(3) = Q(3-1)+Q(3-1) = Q(2)+ Q(2) = 2
# Q(4) = (Q(4-Q(3))+Q(4-Q(2)) = Q(4-2)+Q(4-1) = Q(2)+Q(3) = 1+2=3
# Q(n)=Q(n−Q(n−1))+Q(n−Q(n−2))

def q_hofstadter(num_list):
    q_1 = num_list[0]
    q_2 = num_list[1]
    q_3 = 0
    list_q = [q_1, q_2, q_3]
    if q_1 != 1 or q_2 != 1:
        return
    count = 2
    while count != 0:
        yield 1
        count -= 1
    count = 3
    index = 2
    while True:
        list_q = [q_1, q_2, q_3]
        q_3 = (count - list_q[index - 1]) + (count - list_q[index - 1])
        yield q_3
        q_1 = q_2
        q_2 = q_3
        count += 1


counter = 0

for elem in q_hofstadter([1, 1]):
    counter += 1
    print(elem)
    if counter == 7:
        break
